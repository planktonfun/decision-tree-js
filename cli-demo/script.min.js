var desobj=require("./decision-tree.js"),fs=require("fs"),dt=desobj.dt,basepath="json_files/",jsonContent=fs.readFileSync(basepath+"config.json","utf8"),config=JSON.parse(jsonContent),decisionTree=new dt.DecisionTree(config);console.log(treeToHtml(decisionTree.root));
fs.writeFile(basepath+"tree.html",'<head><link rel="stylesheet" href="../base.css"></head><body><div class="weee" style="    width: 100%;    height: 100%;    overflow-x: scroll;    overflow-y: scroll;"><div class="tree" id="displayTree" style="    width: 9000px;    height: 9000px;"><div class="tree" id="displayTree">'+htmlCss(decisionTree.root)+"</div></div>",function(a){if(a)return console.log(a);console.log("The file was saved!")});
function treeToHtml(a){if(a.category)return[' "',a.category,'"'].join("");var b={},c=['"',a.attribute," ",a.predicateName," ",a.pivot,' ?"'].join("");b[c]={yes:treeToHtml(a.match),no:treeToHtml(a.notMatch)};return b}
function htmlCss(a){return a.category?['<ul><li><a href="#"><b>',a.category,"</b></a></li></ul>"].join(""):['<ul><li><a href="#"><b>',a.attribute," ",a.predicateName," ",a.pivot,' ?</b></a><ul><li><a href="#">yes</a>',htmlCss(a.match),'</li><li><a href="#">no</a>',htmlCss(a.notMatch),"</li></ul></li></ul>"].join("")};
